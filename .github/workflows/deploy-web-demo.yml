name: Deploy Web Demo
on:
  # Runs on pushes targeting the default branch
  push:
    branches: ["main"]
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment
concurrency:
  group: "pages"
  cancel-in-progress: true

jobs:
  # Build job
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      
      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
      
      - name: Install system dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y python3-dev
      
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pygame-ce board chess tqdm numpy tensorflow==2.12.0 keras==2.12.0
          pip install pygbag
      
      - name: Build with Pygbag
        run: |
          python -m pygbag --build --width 800 --height 600 --app_name "Chess Game" --package build --archive main.py
      
      - name: Integrate custom HTML with pygbag output
        run: |
          # Check what pygbag generated
          ls -la build/
          
          # If pygbag created its own HTML file, we need to merge it with ours
          if [ -f build/main.html ]; then
            # Extract the pygbag script section from the generated HTML
            echo "Found pygbag generated HTML, extracting scripts..."
            
            # Create a backup of your custom index.html
            if [ -f index.html ]; then
              cp index.html build/index.html
              
              # Try to extract and inject the pygbag script into your HTML
              # This is a simple approach - replace the placeholder script
              if grep -q "pygbag-loaded" build/index.html; then
                # Find the script tags from pygbag's generated HTML and inject them
                sed -i '/<script>/,/<\/script>/c\
                <!-- Pygbag generated scripts will be injected here by build process -->' build/index.html
                
                # Extract scripts from pygbag HTML and append to our HTML
                if [ -f build/main.html ]; then
                  # Extract script content and append before closing body tag
                  awk '/<script>/,/<\/script>/' build/main.html >> build/temp_scripts.html
                  sed -i '/<\/body>/i\
                  <script src="main.js"></script>' build/index.html
                fi
              fi
            fi
          else
            # If no main.html, just copy our index.html
            if [ -f index.html ]; then
              cp index.html build/index.html
            fi
          fi
          
          # Ensure we have the necessary pygbag files
          if [ -f build/main.js ]; then
            echo "✓ Found main.js"
          fi
          if [ -f build/main.wasm ]; then
            echo "✓ Found main.wasm"  
          fi
          if [ -f build/main.data ]; then
            echo "✓ Found main.data"
          fi
      
      - name: Debug build contents
        run: |
          echo "=== Build directory structure ==="
          find build/ -type f | head -20
          echo ""
          echo "=== index.html content (first 20 lines) ==="
          head -20 build/index.html || echo "No index.html found"
          echo ""
          echo "=== Checking for required web files ==="
          ls -la build/*.{js,wasm,html,data} 2>/dev/null || echo "Some web files missing"
      
      - name: Setup Pages
        uses: actions/configure-pages@v4
      
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: './build'

  # Deployment job
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
