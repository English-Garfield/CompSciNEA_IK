name: Deploy Web Demo
on:
  # Runs on pushes targeting the default branch
  push:
    branches: ["main"]
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment
concurrency:
  group: "pages"
  cancel-in-progress: true

jobs:
  # Build job
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      
      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
      
      - name: Install system dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y python3-dev
      
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pygame-ce board chess tqdm numpy tensorflow==2.12.0 keras==2.12.0
          pip install pygbag
      
      - name: Build with Pygbag
        run: |
          python -m pygbag --build --width 800 --height 600 --app_name "Chess Game" --package build --archive main.py
      
      - name: Ensure proper web structure
        run: |
          # Make sure we have the right structure
          mkdir -p build
          
          # Copy your index.html if it exists
          if [ -f index.html ]; then
            cp index.html build/
            echo "Copied existing index.html"
          fi
          
          # Check if pygbag created its own HTML file
          if [ -f build/*.html ] && [ ! -f build/index.html ]; then
            # Rename pygbag's HTML to index.html
            mv build/*.html build/index.html 2>/dev/null || true
          fi
          
          # Ensure proper MIME types by creating .htaccess equivalent
          cat > build/.nojekyll << EOF
          # Disable Jekyll processing
          EOF
      
      - name: Debug build contents
        run: |
          echo "=== Build directory structure ==="
          find build/ -type f | head -20
          echo ""
          echo "=== index.html content (first 20 lines) ==="
          head -20 build/index.html || echo "No index.html found"
          echo ""
          echo "=== Checking for required web files ==="
          ls -la build/*.{js,wasm,html,data} 2>/dev/null || echo "Some web files missing"
      
      - name: Setup Pages
        uses: actions/configure-pages@v4
      
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: './build'

  # Deployment job
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
