name: Deploy Web Demo

on:
  push:
    branches: ["main"]
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: true

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Install system dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y python3-dev

      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pygame-ce board chess tqdm numpy tensorflow==2.12.0 keras==2.12.0
          pip install pygbag

      - name: Build with Pygbag
        run: |
          python -m pygbag --build --width 800 --height 600 --app_name "Chess Game" main.py

      - name: Setup web files for GitHub Pages
        run: |
          mkdir -p build

          # Copy everything from dist to build
          if [ -d dist ]; then
            cp -r dist/* build/
          fi

          # Copy any Pygbag output in root directory (if present)
          for file in *.js *.wasm *.data *.html pygbag.js main.js; do
            if [ -f "$file" ]; then
              cp "$file" build/
            fi
          done

          # Use custom index.html (if exists)
          if [ -f index.html ]; then
            cp index.html build/index.html
          elif [ -f build/main.html ]; then
            mv build/main.html build/index.html
          fi

          # Prevent GitHub Pages from processing with Jekyll
          touch build/.nojekyll

      - name: Debug build contents
        run: |
          echo "=== Build directory structure ==="
          find build/ -type f
          echo ""
          echo "=== index.html preview ==="
          head -20 build/index.html || echo "No index.html found"
          echo ""
          echo "=== Checking for required files ==="
          ls -la build/*.{js,wasm,html,data} 2>/dev/null || echo "Some web files missing"

      - name: Setup GitHub Pages
        uses: actions/configure-pages@v4

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: './build'

  deploy:
    needs: build
    runs-on: ubuntu-latest
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}

    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
